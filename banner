#!/bin/bash

### banner
#
### Banner with color ###
# by rern
#

hr=$( printf "\e[36m%*s\e[0m\n" "${COLUMNS:-$(tput cols)}" '' | tr ' ' '-' )
info="\e[38;5;0m\e[48;5;3m i \e[0m"

usage() {
	example
	echo "example:  banner -c 6 'banner|script'"
	echo -e "
$hr
usage  :  banner [OPTION]... 'STRING'
$hr

OPTION:
-c N      color code              (256 colors mode)
-f FILE   save to file            (to be used as 'cat file')
-m        used as 'motd'          (in terminal login screen)
-r        restore original 'motd'

STRING    a-z (lowercase) : will be converted to uppercase
          ' (single quote): must be escaped and place outside quotes
          | (pipe)        : manual line break position
$hr
	"
	exit
}

# functions
################################################################################
# 
banner='' # banner lines placeholder
array2banner() {
	str="${@^^}" # convert to uppercase
	for (( i=0; i < ${#str}; i++ )); do
		# array element to character
		char=${str:i:1}
		# character to substitue - numbers and symbols to use as variable names
		case "$char" in
			[1-9]) char="n$char";;
			0) char='O';;
			' ') char='space';;
			'.') char='dot';;
			':') char='colon';;
			',') char='comma';;
			';') char='semicolon';;
			"'") char='quote';;
			'"') char='doublequote';;
			'+') char='plus';;
			'-') char='dash';;
			'*') char='asterisk';;
			'/') char='slash';;
			'^') char='power';;
			'=') char='equal';;
			'<') char='less';;
			'>') char='more';;
			'%') char='percent';;
			'!') char='exclaim';;
			'@') char='at';;
			'#') char='hash';;
			'$') char='dollar';;
			'&') char='ampersand';;
			'_') char='underscore';;
			'\') char='backslash';;
			'{') char='curlL';;
			'[') char='bracketL';;
			'(') char='parenthesesL';;
			')') char='parenthesesR';;
			']') char='bracketR';;
			'}') char='curlR';;
			'?') char='question';;
			[^A-Z,a-z]) char='space';;
		esac
		# character / substitute to array of lines - name of each line of each character
		# A -> ar0[i]=(A[0]); ar1[i]=(A[1]) ...
		ar0[i]=${char}[0]
		ar1[i]=${char}[1]
		ar2[i]=${char}[2]
		ar3[i]=${char}[3]
		ar4[i]=${char}[4]
	done

	# array of lines to lines of value sequence - with '!'indirect reference
	# ar0=(A[0] B[0] C[0] ...) -> li0="$A[0] $B[0] $C[0] ... "
	li0=''; li1=''; li2=''; li3=''; li4=''
	for (( i=0; i < ${#str}; i++ )); do # '$1'start '$2'end of each line
		li0=$li0" ${!ar0[i]}"
		li1=$li1" ${!ar1[i]}"
		li2=$li2" ${!ar2[i]}"
		li3=$li3" ${!ar3[i]}"
		li4=$li4" ${!ar4[i]}"
	done
	
	# banner - append all lines
	banner=$banner"\n$li0\n$li1\n$li2\n$li3\n$li4\n"
}
# break string to array of each banner line
string2array() {
	str="$@"
	width=$( tput cols ) # terminal width
	# auto line break - if no '|' markers, add ones at each line break
	if ! expr index "$str" '|' &> /dev/null; then
		perline=$(( width / 6 -1 ))                   # banner characters per line
		str=$( echo "$str" | sed "s/.\{$perline\}/&|/g" )
	fi
	
	IFS='|' read -ra arraystring <<< "$str"        # split string by '|' markers
	# loop each banner line
	for (( j=0; j < ${#arraystring[*]}; j++ )); do # 'j' keep separation from 'i' loop
		ar0=(); ar1=(); ar2=(); ar3=(); ar4=()     # empty subline arrays
		array2banner "${arraystring[j]}"
	done
}

# for usage function
example() {
	string2array 'banner|script'
	echo -e "\e[36m$banner\e[0m"
}

# options
################################################################################
colorL=''
colorR=''
file=''
motd=''
while :; do
	case $1 in
		-c) colorL="\e[38;5;${2}m"
			colorR="\e[0m"
			shift;;
		-f) file=$2
			shift;;
		-m) motd=1;;
		-r) if [[ ! -f /etc/motd.banner ]]; then
				echo -e "\n$info No custom 'motd' banner found.\n"
				exit
			fi
			rm -f /etc/motd.banner
			rm -f /etc/profile.d/motd.sh
			sed -i '\|cat /etc/banner|d' /etc/profile
			[[ -e /etc/motd.original ]] && mv /etc/motd{.original,}
			cat /etc/motd
			echo -e "$info Relogin to see this original 'mtod'.\n"
			exit;;
		-h|-\?|--help) ;;
		-?*) echo -e "\n$info Unknown option: $1";;
		*) break
	esac
	shift
done

# variables - font matrix
################################################################################
# ABCDEFGHIJKLMNOPQRSTUVWXYZ 1234567890.:,;"+-*/^=<>%!@#$&_\{[()]}?'

A=(
'  #  '
' # # '
'#   #'
'#####'
'#   #'
)
B=(
'#### '
'#   #'
'#### '
'#   #'
'#### '
)
C=(
' ### '
'#   #'
'#    '
'#   #'
' ### '
)
D=(
'#### '
'#   #'
'#   #'
'#   #'
'#### '
)
E=(
'#####'
'#    '
'###  '
'#    '
'#####'
)
F=(
'#####'
'#    '
'###  '
'#    '
'#    '
)
G=(
' ####'
'#    '
'#  ##'
'#   #'
' ####'
)
H=(
'#   #'
'#   #'
'#####'
'#   #'
'#   #'
)
I=(
' # '
' # '
' # '
' # '
' # '
)
J=(
'   #'
'   #'
'   #'
'#  #'
' ## '
)
K=(
'#   #'
'#  # '
'###  '
'#  # '
'#   #'
)
L=(
'#    '
'#    '
'#    '
'#    '
'#####'
)
M=(
'#   #'
'## ##'
'# # #'
'#   #'
'#   #'
)
N=(
'#   #'
'##  #'
'# # #'
'#  ##'
'#   #'
)
O=(
' ### '
'#   #'
'#   #'
'#   #'
' ### '
)
P=(
'#### '
'#   #'
'#### '
'#    '
'#    '
)
Q=(
' ### '
'#   #'
'# # #'
'#  # '
' ## #'
)
R=(
'#### '
'#   #'
'#### '
'#  # '
'#   #'
)
S=(
' ####'
'#    '
' ### '
'    #'
'#### '
)
T=(
'#####'
'  #  '
'  #  '
'  #  '
'  #  '
)
U=(
'#   #'
'#   #'
'#   #'
'#   #'
' ### '
)
V=(
'#   #'
'#   #'
'#   #'
' # # '
'  #  '
)
W=(
'#   #'
'#   #'
'# # #'
'## ##'
'#   #'
)
X=(
'#   #'
' # # '
'  #  '
' # # '
'#   #'
)
Y=(
'#   #'
' # # '
'  #  '
'  #  '
'  #  '
)
Z=(
'#####'
'   # '
'  #  '
' #   '
'#####'
)
n1=(
'  #  '
' ##  '
'  #  '
'  #  '
' ### '
)
n2=(
' ### '
'#   #'
'   # '
' #   '
'#####'
)
n3=(
' ### '
'#   #'
'   # '
'#   #'
' ### '
)
n4=(
'   # '
'  ## '
' # # '
'#####'
'   # '
)
n5=(
'#### '
'#    '
'#### '
'    #'
'#### '
)
n6=(
' ### '
'#    '
'#####'
'#   #'
' ### '
)
n7=(
'#####'
'   # '
'  #  '
' #   '
' #   '
)
n8=(
' ### '
'#   #'
' ### '
'#   #'
' ### '
)
n9=(
' ### '
'#   #'
' ####'
'    #'
' ### '
)
space=(
'     '
'     '
'     '
'     '
'     '
)
dot=(
'     '
'     '
'     '
' ##  '
' ##  '
)
colon=(
' ##  '
' ##  '
'     '
' ##  '
' ##  '
)
comma=(
'     '
'     '
'     '
' ##  '
'  #  '
)
semicolon=(
' ##  '
' ##  '
'     '
' ##  '
'  #  '
)
doublequote=(
' # # '
' # # '
'     '
'     '
'     '
)
plus=(
'     '
'  #  '
'#####'
'  #  '
'     '
)
dash=(
'     '
'     '
'#####'
'     '
'     '
)
asterisk=(
'     '
' # # '
'#####'
' # # '
'     '
)
slash=(
'    #'
'   # '
'  #  '
' #   '
'#    '
)
power=(
'  #  '
' # # '
'#   #'
'     '
'     '
)
equal=(
'     '
'#####'
'     '
'#####'
'     '
)
less=(
'    #'
'  #  '
'#    '
'  #  '
'    #'
)
more=(
'#    '
'  #  '
'    #'
'  #  '
'#    '
)
percent=(
'##  #'
'## # '
'  #  '
' # ##'
'#  ##'
)
exclaim=(
'  #  '
'  #  '
'  #  '
'     '
'  #  '
)
at=(
' ### '
'#   #'
'# ###'
'# # #'
' ####'
)
hash=(
' # # '
'#####'
' # # '
'#####'
' # # '
)
dollar=(
' ####'
'# #  '
' ### '
'  # #'
'#### '
)
ampersand=(
' ##  '
' ##  '
'# # #'
'#  # '
' ## #'
)
underscore=(
'     '
'     '
'     '
'     '
'#####'
)
backslash=(
'#    '
' #   '
'  #  '
'   # '
'    #'
)
curlL=(
'  ## '
' #   '
'##   '
' #   '
'  ## '
)
bracketL=(
' ### '
' #   '
' #   '
' #   '
' ### '
)
parenthesesL=(
'  #  '
' #   '
' #   '
' #   '
'  #  '
)
parenthesesR=(
'  #  '
'   # '
'   # '
'   # '
'  #  '
)
bracketR=(
' ### '
'   # '
'   # '
'   # '
' ### '
)
curlR=(
' ##  '
'   # '
'   ##'
'   # '
' ##  '
)
question=(
' ### '
'#   #'
'   # '
'  #  '
'  #  '
)
quote=(
'  #  '
'  #  '
'     '
'     '
'     '
)

# commands
################################################################################
string2array "$@"

# output
bannercolor="$colorL$banner$colorR"
echo -e "$bannercolor"

# save to file
if [[ $file ]]; then
	echo -e "$bannercolor" > $file
	echo -e "\n$info cat $file \e[38;5;240m# to display the banner\e[0m\n"
fi

# modify 'motd'
if [[ $motd ]]; then
	if [[ $# > 0 ]]; then
		echo -e "$bannercolor" > /etc/motd.banner
		if [[ -d /etc/profile.d ]]; then
			echo -e '#!/bin/bash\ncat /etc/motd.banner' > /etc/profile.d/motd.sh
			chmod +x /etc/profile.d/motd.sh
		else
			echo 'cat /etc/motd.banner' >> /etc/profile
		fi
		mv /etc/motd{,.original}
		echo -e "$info Relogin to see new 'mtod' banner.\n"
	else
		echo -e "$info No input for new 'motd' banner."
		usage
	fi
fi

[[ $# == 0 ]] && usage
