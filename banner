#!/bin/bash

### banner
#
### Banner with color ###
# by rern
#
# ABCDEFGHIJKLMNOPQRSTUVWXYZ 1234567890 .:,;" +-*/^=<>% !@#$&_|\{[()]}?'

hr=$( printf "\e[36m%*s\e[0m\n" "${COLUMNS:-$(tput cols)}" '' | tr ' ' '-' )
usage() {
echo -e "
$hr
usage  :  banner [OPTION] 'STRING'
$hr
example:  banner -c 2 'ABCDEFGHIJKLM'

OPTION:
-c N    - color code (256 colors mode)
-f FILE - save to file (to be used as 'cat file')
-m      - used as 'motd' in terminal login screen
-r      - restore original 'motd'

STRING  - all characters will be converted to uppercase
$hr
"
exit
}
[[ $# == 0 ]] && usage

A=(
'  #  '
' # # '
'#   #'
'#####'
'#   #'
)
B=(
'#### '
'#   #'
'#### '
'#   #'
'#### '
)
C=(
' ### '
'#   #'
'#    '
'#   #'
' ### '
)
D=(
'#### '
'#   #'
'#   #'
'#   #'
'#### '
)
E=(
'#####'
'#    '
'###  '
'#    '
'#####'
)
F=(
'#####'
'#    '
'###  '
'#    '
'#    '
)
G=(
' ####'
'#    '
'#  ##'
'#   #'
' ####'
)
H=(
'#   #'
'#   #'
'#####'
'#   #'
'#   #'
)
I=(
' # '
' # '
' # '
' # '
' # '
)
J=(
'   #'
'   #'
'   #'
'#  #'
' ## '
)
K=(
'#   #'
'#  # '
'###  '
'#  # '
'#   #'
)
L=(
'#    '
'#    '
'#    '
'#    '
'#####'
)
M=(
'#   #'
'## ##'
'# # #'
'#   #'
'#   #'
)
N=(
'#   #'
'##  #'
'# # #'
'#  ##'
'#   #'
)
O=(
' ### '
'#   #'
'#   #'
'#   #'
' ### '
)
P=(
'#### '
'#   #'
'#### '
'#    '
'#    '
)
Q=(
' ### '
'#   #'
'# # #'
'#  # '
' ## #'
)
R=(
'#### '
'#   #'
'#### '
'#  # '
'#   #'
)
S=(
' ####'
'#    '
' ### '
'    #'
'#### '
)
T=(
'#####'
'  #  '
'  #  '
'  #  '
'  #  '
)
U=(
'#   #'
'#   #'
'#   #'
'#   #'
' ### '
)
V=(
'#   #'
'#   #'
'#   #'
' # # '
'  #  '
)
W=(
'#   #'
'#   #'
'# # #'
'## ##'
'#   #'
)
X=(
'#   #'
' # # '
'  #  '
' # # '
'#   #'
)
Y=(
'#   #'
' # # '
'  #  '
'  #  '
'  #  '
)
Z=(
'#####'
'   # '
'  #  '
' #   '
'#####'
)
n1=(
'  #  '
' ##  '
'  #  '
'  #  '
' ### '
)
n2=(
' ### '
'#   #'
'   # '
' #   '
'#####'
)
n3=(
' ### '
'#   #'
'   # '
'#   #'
' ### '
)
n4=(
'   # '
'  ## '
' # # '
'#####'
'   # '
)
n5=(
'#### '
'#    '
'#### '
'    #'
'#### '
)
n6=(
' ### '
'#    '
'#####'
'#   #'
' ### '
)
n7=(
'#####'
'   # '
'  #  '
' #   '
' #   '
)
n8=(
' ### '
'#   #'
' ### '
'#   #'
' ### '
)
n9=(
' ### '
'#   #'
' ####'
'    #'
' ### '
)
space=(
'     '
'     '
'     '
'     '
'     '
)
dot=(
'     '
'     '
'     '
' ##  '
' ##  '
)
colon=(
' ##  '
' ##  '
'     '
' ##  '
' ##  '
)
comma=(
'     '
'     '
'     '
' ##  '
'  #  '
)
semicolon=(
' ##  '
' ##  '
'     '
' ##  '
'  #  '
)
doublequote=(
' # # '
' # # '
'     '
'     '
'     '
)
plus=(
'     '
'  #  '
'#####'
'  #  '
'     '
)
dash=(
'     '
'     '
'#####'
'     '
'     '
)
asterisk=(
'     '
' # # '
'#####'
' # # '
'     '
)
slash=(
'    #'
'   # '
'  #  '
' #   '
'#    '
)
power=(
'  #  '
' # # '
'#   #'
'     '
'     '
)
equal=(
'     '
'#####'
'     '
'#####'
'     '
)
less=(
'    #'
'  #  '
'#    '
'  #  '
'    #'
)
more=(
'#    '
'  #  '
'    #'
'  #  '
'#    '
)
percent=(
'##  #'
'## # '
'  #  '
' # ##'
'#  ##'
)
exclaim=(
'  #  '
'  #  '
'  #  '
'     '
'  #  '
)
at=(
' ### '
'#   #'
'# ###'
'# # #'
' ####'
)
hash=(
' # # '
'#####'
' # # '
'#####'
' # # '
)
dollar=(
' ####'
'# #  '
' ### '
'  # #'
'#### '
)
ampersand=(
' ##  '
' ##  '
'# # #'
'#  # '
' ## #'
)
underscore=(
'     '
'     '
'     '
'     '
'#####'
)
backslash=(
'#    '
' #   '
'  #  '
'   # '
'    #'
)
curlL=(
'  ## '
' #   '
'##   '
' #   '
'  ## '
)
bracketL=(
' ### '
' #   '
' #   '
' #   '
' ### '
)
parenthesesL=(
'  #  '
' #   '
' #   '
' #   '
'  #  '
)
parenthesesR=(
'  #  '
'   # '
'   # '
'   # '
'  #  '
)
bracketR=(
' ### '
'   # '
'   # '
'   # '
' ### '
)
curlR=(
' ##  '
'   # '
'   ##'
'   # '
' ##  '
)
question=(
' ### '
'#   #'
'   # '
'  #  '
'  #  '
)
quote=(
'  #  '
'  #  '
'     '
'     '
'     '
)

colorL=''
colorR=''
file=''
motd=''
while :; do
	case $1 in
		-c) colorL="\e[38;5;${2}m"
			colorR="\e[0m"
			shift;;
		-f) file=$2
			shift;;
		-m) motd=1;;
		-r) if [[ ! -f /etc/motd.banner ]]; then
				echo -e "\nNo custom 'motd' banner found.\n"
				exit
			fi
			rm -f /etc/motd.banner
			rm -f /etc/profile.d/motd.sh
			sed -i '\|cat /etc/banner|d' /etc/profile
			[[ -e /etc/motd.original ]] && mv /etc/motd{.original,}
			cat /etc/motd
			echo "Relogin to see this original 'mtod'.";;
		-h|-\?|--help) usage;;
		-?*) echo -e "\nUnknown option: $1"
			usage;;
		*) break
	esac
	shift
done

# convert to uppercase
string="${@^^}"

# loop string to array
for (( i=0 ; i < ${#string} ; i++ )); do
	# extract each character
	char=${string:i:1}
	# numbers and symbols substitue to use as variable names
	case "$char" in
		[1-9]) char="n$char";;
		0) char='O';;
		' ') char='space';;
		'.') char='dot';;
		':') char='colon';;
		',') char='comma';;
		';') char='semicolon';;
		"'") char='quote';;
		'"') char='doublequote';;
		'+') char='plus';;
		'-') char='dash';;
		'*') char='asterisk';;
		'/') char='slash';;
		'^') char='power';;
		'=') char='equal';;
		'<') char='less';;
		'>') char='more';;
		'%') char='percent';;
		'!') char='exclaim';;
		'@') char='at';;
		'#') char='hash';;
		'$') char='dollar';;
		'&') char='ampersand';;
		'_') char='underscore';;
		'|') char='I';;
		'\') char='backslash';;
		'{') char='curlL';;
		'[') char='bracketL';;
		'(') char='parenthesesL';;
		')') char='parenthesesR';;
		']') char='bracketR';;
		'}') char='curlR';;
		'?') char='question';;
		[^A-Z,a-z]) char='space';;
	esac
	# array - name of each line of each character: ar0=(A[0], B[0], C[0], ..)
	ar0[i]=${char}[0]
	ar1[i]=${char}[1]
	ar2[i]=${char}[2]
	ar3[i]=${char}[3]
	ar4[i]=${char}[4]
done

# compose with '!'indirect variables to array: li0=" $A[0] $B[0] $C[0] ... "
lines=''
compose() {
	# sublines
	li0=" " li1=" "; li2=" "; li3=" "; li4=" "
	for (( i=$1 ; i < $2 ; i++ )); do
		li0=$li0"${!ar0[i]} "
		li1=$li1"${!ar1[i]} "
		li2=$li2"${!ar2[i]} "
		li3=$li3"${!ar3[i]} "
		li4=$li4"${!ar4[i]} "
	done
	# sublines to lines
	lines=$lines"\n$li0\n$li1\n$li2\n$li3\n$li4\n"
}

# line wrap to terminal width
width=$( tput cols )         # terminal width
perline=$(( width / 6 - 1 )) # banner characters per line
stringlength=${#string}      # string length
lastline=0                   
if [[ $(( stringlength % perline )) > 0 ]]; then    # remainder
	lastline=1
fi
bannerline=$(( stringlength / perline + lastline )) # total banner lines

# loop each banner line
charcount=$perline
for (( i=0 ; i < $stringlength ; $(let "i+=$perline") )); do
	compose $i $charcount
	charcount=$(( charcount + perline ))
done

# output
banner="$colorL$lines$colorR"
echo -e "$banner"

# save to file
if [[ $file ]]; then
	echo -e "$banner" > $file
	echo -e "\ncat $file \e[38;5;240m# to display the banner\e[0m\n"
fi

# modify 'motd'
if [[ $motd ]]; then
	echo -e "$banner" > /etc/motd.banner
	if [[ -d /etc/profile.d ]]; then
		echo -e '#!/bin/bash\ncat /etc/motd.banner' > /etc/profile.d/motd.sh
		chmod +x /etc/profile.d/motd.sh
	else
		echo 'cat /etc/motd.banner' >> /etc/profile
	fi
	mv /etc/motd{,.original}
	echo "Relogin to see new 'mtod' banner.\n"
fi
